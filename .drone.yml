---
kind: pipeline
type: docker
name: notification

trigger:
  event: [ push ]

steps:
  - name: slack before
    image: plugins/slack
    failure: ignore
    settings:
      channel: drone-ci
      template: >
        {{build.event}} on branch {{build.branch}} from repo {{repo.name}}

        build #{{build.number}} started!

        {{build.link}}
      webhook:
        from_secret: SLACK_WEBHOOK_URL

---
kind: pipeline
type: docker
name: build docker images

trigger:
  event: [ push ]

steps:
  - name: build image
    image: docker
    volumes:
      - name: dockersock
        path: /var/run/docker.sock
    commands:
      - docker image build .

  - name: slack after docker image build
    image: plugins/slack
    failure: ignore
    settings:
      channel: drone-ci
      template: >
        {{repo.name}}:
        {{#success build.status}}
        docker image build #{{build.number}} succeeded!
        {{else}}
        docker image build #{{build.number}} failed!
        {{/success}}
      webhook:
        from_secret: SLACK_WEBHOOK_URL
    when:
      status: [ success, failure ]

volumes:
  - name: dockersock
    host:
      path: /var/run/docker.sock

---
kind: pipeline
type: docker
name: security

trigger:
  event: [ push ]

steps:
  - name: bandit test
    image: python:3.8-buster
    commands:
      - pip install bandit
      - bandit -r ./
  - name: safety check
    image: python:3.8-buster
    commands:
      - pip install safety
      - safety check
      - safety check -r requirements.txt
  - name: slack after test
    image: plugins/slack
    failure: ignore
    settings:
      channel: drone-ci
      template: >
        {{repo.name}}:
        {{#success build.status}}
        security scan #{{build.number}} succeeded!
        {{else}}
        security scan #{{build.number}} failed!
        {{/success}}
      webhook:
        from_secret: SLACK_WEBHOOK_URL
    when:
      status: [ success, failure ]

---
kind: pipeline
type: docker
name: deploy

trigger:
  event: [ push ]
  branch:
    - master
    - develop

steps:
  - name: deploy develop
    image: docker/compose:1.25.5
    when:
      branch: [develop]
    environment:
      MOODLE_PASSWORD:
        from_secret: MOODLE_PASSWORD
      MOODLE_USERNAME:
        from_secret: MOODLE_USERNAME
    volumes:
      - name: dockersock
        path: /var/run/docker.sock
    commands:
      - docker container stop moodle-scraper || true
      - docker container rm moodle-scraper || true
      - docker-compose -f /drone/src/docker-compose.yml -f /drone/src/docker-compose.dev.yml up --detach --build

  - name: deploy prod
    image: docker/compose:1.25.5
    when:
      branch: [master]
    environment:
      MOODLE_PASSWORD:
        from_secret: MOODLE_PASSWORD
      MOODLE_USERNAME:
        from_secret: MOODLE_USERNAME
      MOODLE_DIRECTORY:
        from_secret: MOODLE_DIRECTORY
      HC_UUID:
        from_secret: HC_UUID
    volumes:
      - name: dockersock
        path: /var/run/docker.sock
    commands:
      - docker container stop moodle-scraper-dev || true
      - docker container rm moodle-scraper-dev || true
      - docker-compose -f /drone/src/docker-compose.yml -f /drone/src/docker-compose.prod.yml up --detach --build

  - name: slack after deploy
    image: plugins/slack
    failure: ignore
    settings:
      channel: drone-ci
      template: >
        {{repo.name}}:
        {{#success build.status}}
        deploy #{{build.number}} succeeded!
        {{else}}
        deploy #{{build.number}} failed!
        {{/success}}
      webhook:
        from_secret: SLACK_WEBHOOK_URL
    when:
      status: [ success, failure ]

volumes:
  - name: dockersock
    host:
      path: /var/run/docker.sock

