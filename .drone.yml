---
kind: pipeline
type: docker
name: deploy

steps:
  - name: slack before
    image: plugins/slack
    settings:
      channel: drone-ci
      template: >
        {{build.event}} on branch {{build.branch}} from repo {{repo.name}}

        build #{{build.number}} started!

        {{build.link}}
      webhook:
        from_secret: SLACK_WEBHOOK_URL
  - name: run dev
    image: docker/compose:1.25.5
    when:
      branch: develop
    environment:
      DEV_RUN: true
      MOODLE_PASSWORD:
        from_secret: MOODLE_PASSWORD
      MOODLE_USERNAME:
        from_secret: MOODLE_USERNAME
    volumes:
      - name: dockersock
        path: /var/run/docker.sock
    commands:
      - docker-compose -f /drone/src/docker-compose.dev.yml up --detach --build
  - name: run master
    image: docker/compose:1.25.5
    when:
      branch: master
    environment:
      MOODLE_PASSWORD:
        from_secret: MOODLE_PASSWORD
      MOODLE_USERNAME:
        from_secret: MOODLE_USERNAME
      MOODLE_DIRECTORY:
        from_secret: MOODLE_DIRECTORY
      SLACK_NOTIFIER_HOOK:
        from_secret: SLACK_NOTIFIER_HOOK
    volumes:
      - name: dockersock
        path: /var/run/docker.sock
    commands:
      - docker-compose -f /drone/src/docker-compose.yml up --detach --build
  - name: slack after
    image: plugins/slack
    settings:
      channel: drone-ci
      template: >
        {{repo.name}}:
        {{#success build.status}}
        build #{{build.number}} succeeded!
        {{else}}
        build #{{build.number}} failed!
        {{/success}}
      webhook:
        from_secret: SLACK_WEBHOOK_URL
    when:
      status: [ success, failure ]

volumes:
  - name: dockersock
    host:
      path: /var/run/docker.sock

trigger:
  event: push
