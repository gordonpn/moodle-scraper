---
kind: pipeline
type: docker
name: notification

trigger:
  event: [ push, pull_request ]

steps:
  - name: slack before
    image: plugins/slack
    failure: ignore
    settings:
      channel: drone-ci
      template: >
        {{build.event}} on branch {{build.branch}} from repo {{repo.name}}

        build #{{build.number}} started

        {{build.link}}
      webhook:
        from_secret: SLACK_WEBHOOK_URL

---
kind: pipeline
type: docker
name: build and publish docker image

platform:
  os: linux
  arch: amd64

trigger:
  event: [ push, pull_request ]
  branch:
    exclude:
      - master

steps:
  - name: publish
    image: docker
    environment:
      DOCKER_TOKEN:
        from_secret: DOCKER_TOKEN
    volumes:
      - name: dockersock
        path: /var/run/docker.sock
    commands:
      - echo $DOCKER_TOKEN | docker login -u gordonpn --password-stdin
      - docker build -t gordonpn/moodle-scraper:latest .
      - docker push gordonpn/moodle-scraper:latest

volumes:
  - name: dockersock
    host:
      path: /var/run/docker.sock
---
kind: pipeline
type: docker
name: security

trigger:
  event: [ push, pull_request ]
  branch:
    exclude:
      - master

steps:
  - name: bandit test
    image: python:3.8-buster
    commands:
      - pip install bandit
      - bandit -r ./ -ll
  - name: safety check
    image: python:3.8-buster
    commands:
      - pip install safety
      - safety check
      - safety check -r requirements.txt

---
kind: pipeline
type: docker
name: deploy

trigger:
  event: [ push ]
  branch: [ master ]

steps:
  - name: deploy prod
    image: docker/compose:1.25.5
    environment:
      MOODLE_PASSWORD:
        from_secret: MOODLE_PASSWORD
      MOODLE_USERNAME:
        from_secret: MOODLE_USERNAME
      MOODLE_DIRECTORY:
        from_secret: MOODLE_DIRECTORY
      HC_UUID:
        from_secret: HC_UUID
    volumes:
      - name: dockersock
        path: /var/run/docker.sock
    commands:
      - /bin/sh /drone/src/docker/scripts/deploy.sh

volumes:
  - name: dockersock
    host:
      path: /var/run/docker.sock

---
kind: pipeline
type: docker
name: notification after

trigger:
  event: [ push, pull_request ]

steps:
  - name: slack after
    image: plugins/slack
    failure: ignore
    settings:
      channel: drone-ci
      template: >
        {{repo.name}}:
        {{#success build.status}}
        build #{{build.number}} succeeded
        {{else}}
        build #{{build.number}} failed
        {{/success}}
      webhook:
        from_secret: SLACK_WEBHOOK_URL
    when:
      status: [ success, failure ]

depends_on:
  - build and publish docker image
  - security
  - deploy
